Given an array A of positive lengths, return the largest perimeter of a triangle with non-zero area, formed from 3 of these lengths.
If it is impossible to form any triangle of non-zero area, return 0.
 

Example 1:
Input: [2,1,2]
Output: 5
Example 2:
Input: [1,2,1]
Output: 0
Example 3:
Input: [3,2,3,4]
Output: 10
Example 4:
Input: [3,6,2,3]
Output: 8
 
Note:
3 <= A.length <= 10000
1 <= A[i] <= 10^6

题意：给定一个数组，让你找出其中三个数构造一个周长最大的三角形，输出周长，如果这样的三个数不存在，输出0.

思路：对数组排序然后从大到小检查。
参考代码：
class Solution {
public:
    bool judge(int a, int b,int c){
        if(a+b>c&&a+c>b&&b+c>a) return true;
        else return false;
    }
    int largestPerimeter(vector<int>& A) {
        sort(A.begin(),A.end());
        for(int i=A.size()-1;i>1;i--){
            int a=A[i],b=A[i-1],c=A[i-2];
            if(judge(a,b,c)) return a+b+c;
        }
        return 0;
    }
};
