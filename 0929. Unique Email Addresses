Every email consists of a local name and a domain name, separated by the @ sign.

For example, in alice@leetcode.com, alice is the local name, and leetcode.com is the domain name.

Besides lowercase letters, these emails may contain '.'s or '+'s.

If you add periods ('.') between some characters in the local name part of an email address, mail sent there will be forwarded to the same address without dots in the local name.  For example, "alice.z@leetcode.com" and "alicez@leetcode.com" forward to the same email address.  (Note that this rule does not apply for domain names.)

If you add a plus ('+') in the local name, everything after the first plus sign will be ignored. This allows certain emails to be filtered, for example m.y+name@email.com will be forwarded to my@email.com.  (Again, this rule does not apply for domain names.)

It is possible to use both of these rules at the same time.

Given a list of emails, we send one email to each address in the list.  How many different addresses actually receive mails? 

 

Example 1:

Input: ["test.email+alex@leetcode.com","test.e.mail+bob.cathy@leetcode.com","testemail+david@lee.tcode.com"]
Output: 2
Explanation: "testemail@leetcode.com" and "testemail@lee.tcode.com" actually receive mails


 

Note:

1 <= emails[i].length <= 100
	1 <= emails.length <= 100
	Each emails[i] contains exactly one '@' character.
题意：给定一组邮箱的收件人，让你统计有效收件人的个数。如果在@前面出现的‘.'忽略不计，如果出现’+‘，则’+‘后面直到字符’@‘之间的内容都忽略。

思路：把每个收件人分两部分，一个本地用户名local，一个域名，对于本地用户名，从第一个字符开始扫描，直到字符’@‘为止，碰到'.'就跳过，碰到’+‘就跳出，即可得到本地用户名local，然后’@‘后面的就是域名。二者合在一起即为整个邮箱，统计数量输出。

注意：刚开始我把st设置为全局的容器，放在第一行，结果始终不对，应该放到类的里面！！！

参考代码：
--------------------- 
class Solution {
public:   
    int numUniqueEmails(vector<string>& emails) {  
		unordered_set<string> mp;
        for(int k=0;k<emails.size();k++){
            string name=emails[k],local="";
			for(int i=0;i<name.size();i++){
				if(name[i]=='+') break;
				if(name[i]=='.') continue;
				local.push_back(name[i]);
			}
			int idx=name.find_last_of('@');
			mp.insert(local+name.substr(idx));
        }
        return mp.size();
    }
};
